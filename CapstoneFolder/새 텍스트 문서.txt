피해 절감

코딩
모니터

//시간 초과는 단위 개정 시 풀리기도 함(int to long long)
배열 선언 한 것 만으로도 부하 생김

vector<vector<long long>> vec(n, vector<long long>(n, 0)); 
//시간 초과(시간은 약간 늘어나지만, 시간 초과 나오나봄)
https://school.programmers.co.kr/learn/courses/30/lessons/87390


unordered_map<string, int> sH; //천개 단위에 데이터에는 더 효율적
unordered_map은 해쉬테이블로 구현한 자료구조로 탐색 시간복잡도는 O(1)입니다.
map은 Binary Search Tree로 탐색 시간 복잡도는 O(log n)입니다.
unordered_map을 사용하기 위해서는 #include< unordered_map > 을 선언해야 합니다.
unordered_map은 중복된 데이터를 허용하지 않고 map에 비해 데이터가 많을 시 월등히 좋은 성능을 보입니다.
https://school.programmers.co.kr/learn/courses/30/lessons/42578

//string str을 갱신하는 법
str = tolower(str1[i]);
str += tolower(str1[i + 1]);
https://school.programmers.co.kr/learn/courses/30/lessons/17677


mapQ.push({tmpY, tmpX});//큐에 삽입하기
mapQ.pop();//한 개 삭제하기
pair<int, int> mPair = mapQ.front();//맨 위의 것이 무엇인지
https://school.programmers.co.kr/learn/courses/30/lessons/1844

#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
--------------------------------
